server {
    listen 80;
    server_name  {{server_host}};
    return 301 https://$server_name$request_uri;
}

upstream {{upstream_name}} {
    ip_hash;
    # If the current host is not the backup, then select the backup servers from the ansible_play_hosts and setup
{% for host in groups['django_server_hosts'] %}
    server {{ hostvars[host]['private_ip'] }}:{{django_port}};
{% endfor %}
}

server {
    listen 443;
    server_name {{server_host}};
    access_log /var/log/nginx/{{server_host}}.access.log;
    error_log /var/log/nginx/{{server_host}}.error.log;

    ssl                  on;
{% if use_wildcard_certificate %}
    ssl_certificate      /etc/nginx/ssl/{{wildcard_host}}/ssl.chain.crt;
    ssl_certificate_key  /etc/nginx/ssl/{{wildcard_host}}/server.key;
{% else %}
    ssl_certificate      /etc/nginx/ssl/{{server_host}}/ssl.chain.crt;
    ssl_certificate_key  /etc/nginx/ssl/{{server_host}}/server.key;
{% endif %}

    location / {
        proxy_pass    http://{{upstream_name}};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header REMOTE_ADDR $remote_addr;

        proxy_redirect off;
        proxy_read_timeout 400;

        client_max_body_size 2m;
    }

     location /admin/static {
        alias /var/www/{{server_host}}/static/;
    }

    # location /admin_portal/ {
    #     autoindex on;
    #     alias /var/www/{{server_host}}/admin_portal/;
    #
    #     index index.html;
    #     try_files $uri $uri/ index.html =404;
    # }

    {% if env == "dev" %}
    location /html-docs {
        autoindex on;
        alias /var/www/{{server_host}}/docs/;
    }
    {% endif %}
}

